
public class QueueDemonstration {

    public static void main(String[] args) {
		
	Object o;
	ArrayQueue<Integer> A = new ArrayQueue<Integer>(3);
	A.enqueue(5);
	System.out.println("Enqueuing a 5 onto the Queue:" +A);
	A.enqueue(3);
	System.out.println("Enqueuing a 3 onto the Queue:" +A);
	int i1 = A.front();
	System.out.println("Testing the front method: " + i1);
	int i2 = A.dequeue();
	System.out.println("We Just Dequeued a "+ i2);
	int i3 = A.dequeue();
	System.out.println("We just Dequeued a " + i3);
	int i4 = 0;
	try{
		System.out.println("Attempting to dequeue");
		i4 = A.dequeue();

	}
	catch(Exception e){
		e.printStackTrace();
		System.out.println("Caught an QueueEmptyException");
	}
	A.enqueue(15);
	System.out.println("Enqueuing a 15 onto the Queue");
	A.enqueue(30);
	System.out.println("Enqueuing a 30 onto the Queue");
	try{
		A.enqueue(45);
	}
	catch(Exception e){
		e.printStackTrace();
		System.out.println("Caught an QueueFullException");
	}

	System.out.println();
	
	System.out.println("Now Testing the NodeQueue");
	
	NodeQueue<String> B = new NodeQueue<String>();
	B.enqueue("Computer");
	System.out.println("Enqueuing a 'Computer' onto the Queue: " + B);
	B.enqueue("Science");
	System.out.println("Enqueuing a 'Science' onto the Queue:" + B);
	B.enqueue("Is");
	System.out.println("Enqueuing a 'Is' onto the Queue:" + B);
	B.enqueue("Interesting");
	System.out.println("Enqueuing a 'Interesting' onto the Queue:" + B);
	String s1 = B.front();
	System.out.println("Displays the top of the queue which is: "  + s1);
	String s2 = B.dequeue();
	System.out.println("We just dequed a: " + s2);
	String s3 = B.dequeue();
	System.out.println("We just dequed a: " + s3);
	String s4 = B.dequeue();
	System.out.println("We just dequed a: " + s4);
	String s5 = B.dequeue();
	System.out.println("We justn dequed a: " + s5);
	
			
    }

}
